name: MSBuild

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild /m /p:Configuration=Release /p:platform=x64 ${{env.SOLUTION_FILE_PATH}}
        msbuild /m /p:Configuration=Release /p:platform=x86 ${{env.SOLUTION_FILE_PATH}}
        msbuild /m /p:Configuration=Release /p:platform=arm64 ${{env.SOLUTION_FILE_PATH}}
        md build
        md build\x64
        move x64\Release\libcdi.dll build\x64\libcdi.dll
        move x64\Release\cditest.exe build\x64\cditest.exe
        md build\x86
        move Win32\Release\libcdi.dll build\x86\libcdi.dll
        move Win32\Release\cditest.exe build\x86\cditest.exe
        md build\ARM64
        move ARM64\Release\libcdi.dll build\ARM64\libcdi.dll
        move ARM64\Release\cditest.exe build\ARM64\cditest.exe
        copy libcdi\libcdi.h build\libcdi.h
        copy LICENSE.txt build\LICENSE
        copy README.txt build\README.txt

    - name: Create ZIP
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'libcdi.zip'
        directory: 'build'

    - name: Delete old release
      continue-on-error: true
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        gh release delete latest --cleanup-tag --yes
      env:
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        gh release create latest build\libcdi.zip --latest -t "Development Build"
      env:
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
